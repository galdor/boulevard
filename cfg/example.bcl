logs {
  terminal {
    color true
  }

  debug_level 1
}

acme {
  datastore_path "./local/acme"
  contact "bob@example.com"

  http_challenge_solver {
    upstream_uri "http://localhost:8080"
  }

  pebble true
}

control_api {
  path "/tmp/boulevard.sock"

  access_logs {
    path "local/logs/control-api.log"
    format common
  }

  log_go_server_errors true
}

pprof {
  address ":6060"
}

server "web" {
  listener {
    address ":8080"
  }

  listener {
    address ":4430"

    tls {
      acme {
        domain "localhost"
        domain "www.localhost"
      }
    }
  }

  listener {
    address ":4431"

    tls {
      certificate_file "local/tls/certificates/boulevard.crt"
      private_key_file "local/tls/private-keys/boulevard.key"

      min_version "1.2"

      cipher_suite "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
      cipher_suite "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
      cipher_suite "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"
      cipher_suite "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
    }
  }

  http {
    access_logs {
      path "local/logs/server-{server.name}.log"
      format common
    }

    debug_log_variables true
    log_go_server_errors true
    unencrypted_http2 true

    # handler {
    #   match tls false
    #   redirect 301 "https://{http.request.host}{http.request.uri}"
    # }

    handler {
      match path "/hello"

      reply {
        status 200

        header {
          add "Server" "Boulevard"
        }

        body "Hello world!\n"
      }
    }

    handler {
      match path "/path" ~re"^/path-\\d+$"
      reply 200 "foo\n"
    }

    handler {
      match path "/host"
      match host "localhost" ~re"^test\\..+$"
      reply 200 "localhost\n"
    }

    handler {
      match path "/redirect/"
      redirect 302 "/{http.match.subpath}"
    }

    handler {
      match path "/nested/"

      handler {
        match method "POST" "PUT"
        reply 200 "POST or PUT!\n"
      }

      handler {
        match path "/nested/foo/"
        reply 200 "Foo!\n"
      }
    }

    handler {
      match path "/version"

      handler {
        match http_version "HTTP/1.0" "HTTP/1.1"
        reply 200 "HTTP 1.x\n"
      }

      reply 200 "HTTP 2 or 3\n"
    }

    handler {
      match path "/header"

      handler {
        match header "User-Agent" ~re"(?i)\\bfirefox/"
        reply 200 "Firefox\n"
      }

      handler {
        match header "User-Agent" ~re"(?i)\\bcurl/"
        reply 200 "Curl\n"
      }

      handler {
        match header "User-Agent"
        reply 200 "unknown user agent\n"
      }

      reply 200 "no user agent\n"
    }

    handler {
      match path "/status"
      status
    }

    handler {
      match path "/boulevard/"
      serve "."

      handler {
        match path "local/"

        serve {
          path "local"

          # index_file "index.txt"
          # index_redirect 302 "/hello"
          index_view true

          file_not_found {
            reply 404 "File not found.\n"
          }
        }
      }
    }

    handler {
      match path "/private/"

      authentication {
        secrets {
          hash "SHA3-256"
        }

        basic {
          # bob:secret
          user "bob" "f5a5207a8729b1f709cb710311751eb2fc8acad5a1fb8ac991b736e69b6529a3"
          # alice:secret2
          user "alice" "a7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a"
        }
      }

      reply 200 "access authorized\n"
    }

    handler {
      match path "/forbidden/"
      reply 403 "access denied\n"
    }

    handler {
      match path "/request-rate-limits/"

      request_rate_limits {
        global 100 60
        per_address 5 60
        per_ipv4_address 10 60
        per_ipv4_network "/8" 20 60
        per_ipv6_network "/48" 30 60

        address "127.0.0.1" 1 60
        address "::1" 1 60
        network "127.0.0.0/8" 2 60
        network "::1/64" 2 60
      }
    }

    handler {
      match path "/nginx/"

      reverse_proxy {
        uri "http://127.42.1.1:9002"

        response_header {
          set "Server" "Boulevard"
        }
      }
    }

    # handler {
    #   match path "/nginx-pool/"

    #   reverse_proxy {
    #     load_balancer {
    #       server "127.42.2.1"
    #       server "127.42.2.2"
    #       server "127.42.2.3"

    #       health {
    #         http {
    #           path "/nginx/ping"
    #         }
    #       }
    #     }

    #     response_header {
    #       set "Server" "Boulevard"
    #     }
    #   }
    # }

    handler {
      match path "/fpm/"

      fastcgi {
        address "localhost:9000"
        path "/app/test"
        default_script "index.php"
        script_regexp "^.+?\\.php"
      }
    }
  }
}

server "irc" {
  listener {
    address ":6667"
  }

  listener {
    address ":6697"

    tls {
      acme {
        domain "localhost"
      }
    }
  }

  tcp {
    reverse_proxy "localhost:6698"
  }
}
